//
// Generated file, do not edit! Created by nedtool 4.6 from src/node/communication/routing/testPhasesProtocol/TestPhasesPacket.msg.
//

#ifndef _TESTPHASESPACKET_M_H_
#define _TESTPHASESPACKET_M_H_

#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0406
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



// cplusplus {{
#include "RoutingPacket_m.h"
// }}

/**
 * Struct generated from src/node/communication/routing/testPhasesProtocol/TestPhasesPacket.msg:25 by nedtool.
 */
struct Neighbor
{
    Neighbor();
    int id;
    double rssi;
    double residual;
    double location;
};

void doPacking(cCommBuffer *b, Neighbor& a);
void doUnpacking(cCommBuffer *b, Neighbor& a);

/**
 * Struct generated from src/node/communication/routing/testPhasesProtocol/TestPhasesPacket.msg:33 by nedtool.
 */
struct tdma
{
    tdma();
    int id;
    int weight;
};

void doPacking(cCommBuffer *b, tdma& a);
void doUnpacking(cCommBuffer *b, tdma& a);

/**
 * Enum generated from <tt>src/node/communication/routing/testPhasesProtocol/TestPhasesPacket.msg:40</tt> by nedtool.
 * <pre>
 * enum TestPhasesPacket_Type
 * {
 * 
 *     HELLO_WORD_PACKET = 0;
 *     BROADCAST_PACKET = 1;
 *     TO_SINK_PACKET = 2;
 *     SENT_TO_SINK_PACKET = 3;
 *     END_SETUP_PACKET = 4;
 *     JOIN_CH_PACKET = 5;
 *     ACK_CH_PACKET = 6;
 *     CLUSTER_MEMBER_PACKET = 7;
 *     NODE_ACK_CH_PACKET = 8;
 *     TDMA_CH_PACKET = 9;
 *     DATA_CH_PACKET = 10;
 * }
 * </pre>
 */
enum TestPhasesPacket_Type {
    HELLO_WORD_PACKET = 0,
    BROADCAST_PACKET = 1,
    TO_SINK_PACKET = 2,
    SENT_TO_SINK_PACKET = 3,
    END_SETUP_PACKET = 4,
    JOIN_CH_PACKET = 5,
    ACK_CH_PACKET = 6,
    CLUSTER_MEMBER_PACKET = 7,
    NODE_ACK_CH_PACKET = 8,
    TDMA_CH_PACKET = 9,
    DATA_CH_PACKET = 10
};

/**
 * Class generated from <tt>src/node/communication/routing/testPhasesProtocol/TestPhasesPacket.msg:55</tt> by nedtool.
 * <pre>
 * packet TestPhasesPacket extends RoutingPacket
 * {
 *     int hopNumb;
 *     int currentRound;
 *     double sinkRssi;
 *     double location;
 *     double sumEnergy;
 *     double residual;
 *     double moisture;
 *     int followerNumb;
 *     int TestPhasesPacketKind @enum(TestPhasesPacket_Type);
 *     int schedule[];
 *     Neighbor Neighbors[];
 * }
 * </pre>
 */
class TestPhasesPacket : public ::RoutingPacket
{
  protected:
    int hopNumb_var;
    int currentRound_var;
    double sinkRssi_var;
    double location_var;
    double sumEnergy_var;
    double residual_var;
    double moisture_var;
    int followerNumb_var;
    int TestPhasesPacketKind_var;
    int *schedule_var; // array ptr
    unsigned int schedule_arraysize;
    Neighbor *Neighbors_var; // array ptr
    unsigned int Neighbors_arraysize;

  private:
    void copy(const TestPhasesPacket& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const TestPhasesPacket&);

  public:
    TestPhasesPacket(const char *name=NULL, int kind=0);
    TestPhasesPacket(const TestPhasesPacket& other);
    virtual ~TestPhasesPacket();
    TestPhasesPacket& operator=(const TestPhasesPacket& other);
    virtual TestPhasesPacket *dup() const {return new TestPhasesPacket(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual int getHopNumb() const;
    virtual void setHopNumb(int hopNumb);
    virtual int getCurrentRound() const;
    virtual void setCurrentRound(int currentRound);
    virtual double getSinkRssi() const;
    virtual void setSinkRssi(double sinkRssi);
    virtual double getLocation() const;
    virtual void setLocation(double location);
    virtual double getSumEnergy() const;
    virtual void setSumEnergy(double sumEnergy);
    virtual double getResidual() const;
    virtual void setResidual(double residual);
    virtual double getMoisture() const;
    virtual void setMoisture(double moisture);
    virtual int getFollowerNumb() const;
    virtual void setFollowerNumb(int followerNumb);
    virtual int getTestPhasesPacketKind() const;
    virtual void setTestPhasesPacketKind(int TestPhasesPacketKind);
    virtual void setScheduleArraySize(unsigned int size);
    virtual unsigned int getScheduleArraySize() const;
    virtual int getSchedule(unsigned int k) const;
    virtual void setSchedule(unsigned int k, int schedule);
    virtual void setNeighborsArraySize(unsigned int size);
    virtual unsigned int getNeighborsArraySize() const;
    virtual Neighbor& getNeighbors(unsigned int k);
    virtual const Neighbor& getNeighbors(unsigned int k) const {return const_cast<TestPhasesPacket*>(this)->getNeighbors(k);}
    virtual void setNeighbors(unsigned int k, const Neighbor& Neighbors);
};

inline void doPacking(cCommBuffer *b, TestPhasesPacket& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, TestPhasesPacket& obj) {obj.parsimUnpack(b);}


#endif // ifndef _TESTPHASESPACKET_M_H_

